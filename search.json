[{"path":"https://qpmnguyen.github.io/CBEA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 CBEA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"package implements CBEA approach performing set-based enrichment analysis microbiome relative abundance data. preprint package can found bioXriv. summary, CBEA (Competitive Balances taxonomic Enrichment Analysis) provides estimate activity set transforming input taxa--sample data matrix corresponding set--sample data matrix. resulting output can used additional downstream analyses differential abundance, classification, clustering, etc. using set-based features instead original units. transformation CBEA applies based isometric log ratio transformation:\\[ CBEA_{,\\mathbb{S}} = \\sqrt{\\frac{|\\mathbb{S}||\\mathbb{S_c}|}{|\\mathbb{S}| + |\\mathbb{S_c}|}} \\ln \\frac{g(X_{,j | j\\\\mathbb{S}})}{g(X_{,j | j \\notin \\mathbb{S}})} \\] \\(\\mathbb{S}\\) set interest, \\(\\mathbb{S}_C\\) ’s complement, \\(g()\\) geometric mean operation, \\(X\\) original data matrix \\(\\) index representing samples \\(j\\) index representing variables (taxa). inference procedure performed estimating null distribution test statistic. can done either via permutations parametric fit distributional form permuted scores. Users can also adjust variance inflation due inter-taxa correlation. Please refer main manuscript additional details.","code":""},{"path":[]},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"install-cbea","dir":"Articles","previous_headings":"Usage guide","what":"Install CBEA","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"CBEA R package available via Bioconductor repository packages. requires installing R open source statistical programming language, can accessed operating system CRAN. can install CBEA using following commands R session: issues installation procedure package features, best place file issue GitHub repository. additional support can use Bioconductor support site use CBEA tag check older posts. Please note want receive help adhere posting guidelines. particularly critical provide small reproducible example session information package developers can track source error.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {       install.packages(\"BiocManager\")   }  BiocManager::install(\"CBEA\")  ## Check that you have a valid Bioconductor installation BiocManager::valid() library(\"CBEA\") library(BiocSet) library(tidyverse) set.seed(1020)"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"loading-sample-data","dir":"Articles","previous_headings":"Usage guide","what":"Loading sample data","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"First, can load pre-packaged data sets contained CBEA. ’re loading data Human Microbiome Project (HMP) TreeSummarizedExperiment data container TreeSummarizedExperiment. package support phyloseq phyloseq package users can leverage mia package convert data types. addition, users can also input raw matrices data frames, however require additional arguments. taxa_are_rows argument requires users specify whether data frame/matrix taxa abundances rows (columns). id_col argument requires users specify (data frames ) vector names row metadata excluded analysis.","code":"data(\"hmp_gingival\") abun <- hmp_gingival$data metab_sets <- hmp_gingival$set abun # this is a TreeSummarizedExperiment object  #> class: TreeSummarizedExperiment  #> dim: 5378 369  #> metadata(4): experimentData phylogeneticTree experimentData #>   phylogeneticTree #> assays(1): 16SrRNA #> rownames(5378): OTU_97.10005 OTU_97.10006 ... OTU_97.9991 OTU_97.9995 #> rowData names(7): CONSENSUS_LINEAGE SUPERKINGDOM ... FAMILY GENUS #> colnames(369): 700014427 700014521 ... 700111587 700111758 #> colData names(7): RSID VISITNO ... HMP_BODY_SUBSITE SRS_SAMPLE_ID #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> rowLinks: NULL #> rowTree: NULL #> colLinks: NULL #> colTree: NULL"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"input-sets","dir":"Articles","previous_headings":"Usage guide","what":"Input sets","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"CBEA accepts type sets, long BiocSet format elements sets can matched taxa names data set. main function check names match. information BiocSet, please refer documentation BiocSet. However, simply speaking, BiocSet acts similar list three data frames can used conjunction dplyr/tidyr.","code":"metab_sets #> class: BiocSet #>  #> es_element(): #> # A tibble: 4,828 × 1 #>   element      #>   <chr>        #> 1 OTU_97.10005 #> 2 OTU_97.10053 #> 3 OTU_97.10090 #> # … with 4,825 more rows #>  #> es_set(): #> # A tibble: 3 × 1 #>   set         #>   <chr>       #> 1 F Anaerobic #> 2 Aerobic     #> 3 Anaerobic   #>  #> es_elementset() <active>: #> # A tibble: 4,828 × 2 #>   element      set         #>   <chr>        <chr>       #> 1 OTU_97.10005 F Anaerobic #> 2 OTU_97.10053 F Anaerobic #> 3 OTU_97.10090 F Anaerobic #> # … with 4,825 more rows"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"applying-cbea","dir":"Articles","previous_headings":"Usage guide","what":"Applying CBEA","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"specifying inputs, cbea main function apply method. zeros abundance data, cbea add pseudocount avoid issues log-ratio transformation (throw warning). different zero-handling approach desired, users pre-process abundance data appropriate method. parametric fits, cbea relies fitdistrplus *[mixtools](https://CRAN.R-project.org/package=mixtools)* packages estimate parameters null. Specific arguments control fitting procedure can provided named list control argument. Applying cbea one command: important arguments control behaviour CBEA. output: controls type output returned. CBEA usually estimates parametric null users can specify want return. users want perform downstream analysis set-level features, can return CDF values z-scores raw score computed distribution (options cdf zscore). Alternatively, users can just return raw scores (distribution fitting performed) using raw option. Users can also use distribution estimate unadjusted p-values (option pval) see whether set enriched sample. unadjusted p-values can converted based threshold (based thresh default set 0.05) dummy variable indicating enrichment (option sig). Note: CDF values Z-scores available non-parametric null estimations. parametric: logical argument specify whether null distribution specified via parametric fit via non-parametric permutation testing. parametric TRUE, users need specify distr adj. parametric FALSE, users need increase n_perm. distr: form distribution parametric fit desired. now supports norm, mnorm. adj: Whether distribution adjusted variance inflation. procedure done combining mean estimate scores computed permuted data set variance estimate raw scores (computed unpermuted data set).","code":"results <- cbea(abun, set = metab_sets, abund_values = \"16SrRNA\",               output = \"cdf\", distr = \"mnorm\", adj = TRUE, thresh = 0.05, n_perm = 10) #> Warning in .local(obj, set, output, distr, adj, n_perm, parametric, thresh, : Taxonomic count table contains zeros, #>             which would invalidate the log-ratio transform. #>             Adding a pseudocount of 1e-5... #> number of iterations= 644  #> number of iterations= 1253  #> number of iterations= 468  #> number of iterations= 847  #> number of iterations= 612  #> number of iterations= 105 results #> CBEA output of class 'CBEAout' with 369 samples and 3 sets  #>  Fit type: Parametric with 2-component Gaussian Mixture Distribution  #>  Number of permutations: 10  #>  Output type: CDF values (cdf)"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"model-output","dir":"Articles","previous_headings":"Usage guide","what":"Model output","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"output object class CBEAout, S3 object. underlying data structure list lists, outer lists represent different aspects output. example R represent final scores diagnostic represent certain goodness--fit statistics. Within aspect, list size equivalent total number sets evaluated. example, results object size 3 representing evaluated sets. Users can use tidy glance following broom process CBEAout nice objects. tidy function returns tibble scores (samples set). glance function returns diagnostics. two options glance function: fit_comparison allows users compare l-moments data, permuted data, final fitted distribution; fit_diagnostic shows goodness--fit statistics distribution fitting procedure , log-likelihoods Anderson-Darling (column “ad”) statistics.","code":"names(results) #> [1] \"R\"              \"parameters\"     \"diagnostic\"     \"fit_comparison\" #> [5] \"call_param\" str(results$R) #> List of 3 #>  $ Aerobic    : num [1:369] 0.9694 0.0286 0.9953 0.8842 0.5617 ... #>  $ Anaerobic  : num [1:369] 0.000461 0.58112 0.203075 0.034167 0.088761 ... #>  $ F Anaerobic: num [1:369] 0.997 0.89 0.303 0.96 0.863 ... tidy(results) #> # A tibble: 369 × 4 #>    sample_ids Aerobic Anaerobic F_Anaerobic #>    <chr>        <dbl>     <dbl>       <dbl> #>  1 700014427   0.969   0.000461      0.997  #>  2 700014521   0.0286  0.581         0.890  #>  3 700014603   0.995   0.203         0.303  #>  4 700014749   0.884   0.0342        0.960  #>  5 700014791   0.562   0.0888        0.863  #>  6 700014917   0.720   0.134         0.898  #>  7 700014989   0.0249  0.992         0.0462 #>  8 700015076   0.685   0.0698        0.911  #>  9 700015149   0.402   0.000344      1.00   #> 10 700015215   0.0976  0.729         0.605  #> # … with 359 more rows glance(results, \"fit_comparison\") #> # A tibble: 9 × 7 #>   set_ids     final_param  distr l_location l_scale l_skewness l_kurtosis #>   <chr>       <named list> <chr>      <dbl>   <dbl>      <dbl>      <dbl> #> 1 Aerobic     <dbl [6]>    data      6.98     15.2   0.0300        0.114  #> 2 Aerobic     <dbl [6]>    perm     -0.0557    2.58 -0.0000123     0.131  #> 3 Aerobic     <dbl [6]>    fit       0.0768   13.0  -0.00401       0.127  #> 4 Anaerobic   <dbl [6]>    data     -6.42     20.0   0.0360        0.0917 #> 5 Anaerobic   <dbl [6]>    perm      0.758     2.54  0.0146        0.122  #> 6 Anaerobic   <dbl [6]>    fit       0.986    15.0   0.0104        0.132  #> 7 F_Anaerobic <dbl [6]>    data      5.88     16.5   0.0481        0.0952 #> 8 F_Anaerobic <dbl [6]>    perm     -0.465     2.71  0.000482      0.125  #> 9 F_Anaerobic <dbl [6]>    fit      -0.591    15.1   0.000309      0.123 glance(results, \"fit_diagnostic\") #> # A tibble: 6 × 5 #>   set_ids     final_param   loglik    ad type           #>   <chr>       <named list>   <dbl> <dbl> <chr>          #> 1 Aerobic     <dbl [6]>    -10853. 0.229 permuted_distr #> 2 Aerobic     <dbl [6]>     -1735. 0.141 unperm_distr   #> 3 Anaerobic   <dbl [6]>    -10791. 0.327 permuted_distr #> 4 Anaerobic   <dbl [6]>     -1832. 0.185 unperm_distr   #> 5 F_Anaerobic <dbl [6]>    -11036. 0.321 permuted_distr #> 6 F_Anaerobic <dbl [6]>     -1762. 0.277 unperm_distr"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"parallel-computing","dir":"Articles","previous_headings":"Usage guide","what":"Parallel computing","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"CBEA -built capacity perform calculations paralelled across total number sets. engine parallelization BiocParallel. NULL, SerialParam backend used.","code":"BiocParallel::registered() #> $SerialParam #> class: SerialParam #>   bpisup: FALSE; bpnworkers: 1; bptasks: 0; bpjobname: BPJOB #>   bplog: FALSE; bpthreshold: INFO; bpstopOnError: TRUE #>   bpRNGseed: ; bptimeout: 2592000; bpprogressbar: FALSE #>   bpexportglobals: TRUE; bpforceGC: FALSE #>   bplogdir: NA #>   bpresultdir: NA cbea(abun, set = metab_sets, abund_values = \"16SrRNA\",      output = \"cdf\", distr = \"mnorm\", adj = TRUE, thresh = 0.05, n_perm = 10,       parallel_backend = MulticoreParam(workers = 2))"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"citing-cbea","dir":"Articles","previous_headings":"","what":"Citing CBEA","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"hope CBEA useful research. Please use following information cite package overall approach. Thank !","code":"## Citation info citation(\"CBEA\") #>  #> Nguyen Q (2022). _CBEA: R package for performing CBEA approach_. doi: #> 10.18129/B9.bioc.CBEA (URL: https://doi.org/10.18129/B9.bioc.CBEA), #> https://github.com/qpmnguyen/CBEA - R package version 0.99.3, <URL: #> http://www.bioconductor.org/packages/CBEA>. #>  #> Nguyen Q (2022). \"CBEA: Competitive balances for taxonomic enrichment #> analysis.\" _bioRxiv_. doi: 10.1101/TODO (URL: #> https://doi.org/10.1101/TODO), <URL: #> https://www.biorxiv.org/content/10.1101/TODO>. #>  #> To see these entries in BibTeX format, use 'print(<citation>, #> bibtex=TRUE)', 'toBibtex(.)', or set #> 'options(citation.bibtex.max=999)'."},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"CBEA package (Nguyen, 2022) made possible thanks : R (R Core Team, 2021) BiocStyle (Oleś, 2021) knitr (Xie, 2021) RefManageR (McLean, 2017) rmarkdown (Allaire, Xie, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2022) broom (Robinson, Hayes, Couch, 2022) sessioninfo (Wickham, Chang, Flight, Müller, Hester, 2021) testthat (Wickham, 2011) mixtools (Benaglia, Chauveau, Hunter, Young, 2009) fitdistrplus (Delignette-Muller Dutang, 2015) tidyverse (Wickham, Averick, Bryan, Chang, McGowan, François, Grolemund, Hayes, Henry, Hester, Kuhn, Pedersen, Miller, Bache, Müller, Ooms, Robinson, Seidel, Spinu, Takahashi, Vaughan, Wilke, Woo, Yutani, 2019) BiocSet phyloseq (McMurdie Holmes, 2013) BiocParallel (Morgan, Wang, Obenchain, Lang, Thompson, Turaga, 2021) package developed using biocthis. Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"basic_usage.Rmd\", \"BiocStyle::html_document\"))  ## Extract the R code library(\"knitr\") knit(\"basic_usage.Rmd\", tangle = TRUE) #> [1] \"2022-03-08 22:56:26 UTC\" #> Time difference of 19.547 secs #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.1.2 (2021-11-01) #>  os       Ubuntu 20.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2022-03-08 #>  pandoc   2.7.3 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package                  * version  date (UTC) lib source #>  AnnotationDbi              1.56.2   2021-11-09 [1] Bioconductor #>  ape                        5.6-2    2022-03-02 [1] RSPM #>  assertthat                 0.2.1    2019-03-21 [1] RSPM #>  backports                  1.4.1    2021-12-13 [1] RSPM #>  Biobase                    2.54.0   2021-10-26 [1] Bioconductor #>  BiocGenerics               0.40.0   2021-10-26 [1] Bioconductor #>  BiocIO                     1.4.0    2021-10-26 [1] Bioconductor #>  BiocManager                1.30.16  2021-06-15 [1] RSPM #>  BiocParallel               1.28.3   2021-12-09 [1] Bioconductor #>  BiocSet                  * 1.8.1    2021-11-03 [1] Bioconductor #>  BiocStyle                * 2.22.0   2021-10-26 [1] Bioconductor #>  Biostrings                 2.62.0   2021-10-26 [1] Bioconductor #>  bit                        4.0.4    2020-08-04 [1] RSPM #>  bit64                      4.0.5    2020-08-30 [1] RSPM #>  bitops                     1.0-7    2021-04-24 [1] RSPM #>  blob                       1.2.2    2021-07-23 [1] RSPM #>  bookdown                   0.24     2021-09-02 [1] RSPM #>  broom                      0.7.12   2022-01-28 [1] RSPM #>  bslib                      0.3.1    2021-10-06 [1] RSPM #>  cachem                     1.0.6    2021-08-19 [1] RSPM #>  CBEA                     * 0.99.3   2022-03-08 [1] local #>  cellranger                 1.1.0    2016-07-27 [1] RSPM #>  cli                        3.2.0    2022-02-14 [1] RSPM #>  colorspace                 2.0-3    2022-02-21 [1] RSPM #>  crayon                     1.5.0    2022-02-14 [1] RSPM #>  DBI                        1.1.2    2021-12-20 [1] RSPM #>  dbplyr                     2.1.1    2021-04-06 [1] RSPM #>  DelayedArray               0.20.0   2021-10-26 [1] Bioconductor #>  desc                       1.4.1    2022-03-06 [1] RSPM #>  digest                     0.6.29   2021-12-01 [1] RSPM #>  dplyr                    * 1.0.8    2022-02-08 [1] RSPM #>  ellipsis                   0.3.2    2021-04-29 [1] RSPM #>  evaluate                   0.15     2022-02-18 [1] RSPM #>  fansi                      1.0.2    2022-01-14 [1] RSPM #>  fastmap                    1.1.0    2021-01-25 [1] RSPM #>  fitdistrplus               1.1-6    2021-09-28 [1] RSPM #>  forcats                  * 0.5.1    2021-01-27 [1] RSPM #>  fs                         1.5.2    2021-12-08 [1] RSPM #>  generics                   0.1.2    2022-01-31 [1] RSPM #>  GenomeInfoDb               1.30.1   2022-01-30 [1] Bioconductor #>  GenomeInfoDbData           1.2.7    2022-03-03 [1] Bioconductor #>  GenomicRanges              1.46.1   2021-11-18 [1] Bioconductor #>  ggplot2                  * 3.3.5    2021-06-25 [1] RSPM #>  glue                       1.6.2    2022-02-24 [1] RSPM #>  goftest                    1.2-3    2021-10-07 [1] RSPM #>  gtable                     0.3.0    2019-03-25 [1] RSPM #>  haven                      2.4.3    2021-08-04 [1] RSPM #>  hms                        1.1.1    2021-09-26 [1] RSPM #>  htmltools                  0.5.2    2021-08-25 [1] RSPM #>  httr                       1.4.2    2020-07-20 [1] RSPM #>  IRanges                    2.28.0   2021-10-26 [1] Bioconductor #>  jquerylib                  0.1.4    2021-04-26 [1] RSPM #>  jsonlite                   1.8.0    2022-02-22 [1] RSPM #>  KEGGREST                   1.34.0   2021-10-26 [1] Bioconductor #>  kernlab                    0.9-29   2019-11-12 [1] RSPM #>  knitr                      1.37     2021-12-16 [1] RSPM #>  lattice                    0.20-45  2021-09-22 [2] CRAN (R 4.1.2) #>  lazyeval                   0.2.2    2019-03-15 [1] RSPM #>  lifecycle                  1.0.1    2021-09-24 [1] RSPM #>  lmom                       2.8      2019-03-12 [1] RSPM #>  lubridate                  1.8.0    2021-10-07 [1] RSPM #>  magrittr                   2.0.2    2022-01-26 [1] RSPM #>  MASS                       7.3-55   2022-01-13 [1] RSPM #>  Matrix                     1.4-0    2021-12-08 [1] RSPM #>  MatrixGenerics             1.6.0    2021-10-26 [1] Bioconductor #>  matrixStats                0.61.0   2021-09-17 [1] RSPM #>  memoise                    2.0.1    2021-11-26 [1] RSPM #>  mixtools                   1.2.0    2020-02-07 [1] RSPM #>  modelr                     0.1.8    2020-05-19 [1] RSPM #>  munsell                    0.5.0    2018-06-12 [1] RSPM #>  nlme                       3.1-155  2022-01-13 [1] RSPM #>  ontologyIndex              2.7      2021-02-03 [1] RSPM #>  pillar                     1.7.0    2022-02-01 [1] RSPM #>  pkgconfig                  2.0.3    2019-09-22 [1] RSPM #>  pkgdown                    2.0.2    2022-01-13 [1] RSPM #>  plyr                       1.8.6    2020-03-03 [1] RSPM #>  png                        0.1-7    2013-12-03 [1] RSPM #>  purrr                    * 0.3.4    2020-04-17 [1] RSPM #>  R6                         2.5.1    2021-08-19 [1] RSPM #>  ragg                       1.2.2    2022-02-21 [1] RSPM #>  Rcpp                       1.0.8    2022-01-13 [1] RSPM #>  RCurl                      1.98-1.6 2022-02-08 [1] RSPM #>  readr                    * 2.1.2    2022-01-30 [1] RSPM #>  readxl                     1.3.1    2019-03-13 [1] RSPM #>  RefManageR               * 1.3.0    2020-11-13 [1] RSPM #>  reprex                     2.0.1    2021-08-05 [1] RSPM #>  rlang                      1.0.2    2022-03-04 [1] RSPM #>  rmarkdown                  2.12     2022-03-02 [1] RSPM #>  rprojroot                  2.0.2    2020-11-15 [1] RSPM #>  RSQLite                    2.2.10   2022-02-17 [1] RSPM #>  rstudioapi                 0.13     2020-11-12 [1] RSPM #>  rvest                      1.0.2    2021-10-16 [1] RSPM #>  S4Vectors                  0.32.3   2021-11-21 [1] Bioconductor #>  sass                       0.4.0    2021-05-12 [1] RSPM #>  scales                     1.1.1    2020-05-11 [1] RSPM #>  segmented                  1.4-0    2022-01-28 [1] RSPM #>  sessioninfo              * 1.2.2    2021-12-06 [1] RSPM #>  SingleCellExperiment       1.16.0   2021-10-26 [1] Bioconductor #>  stringi                    1.7.6    2021-11-29 [1] RSPM #>  stringr                  * 1.4.0    2019-02-10 [1] RSPM #>  SummarizedExperiment       1.24.0   2021-10-26 [1] Bioconductor #>  survival                   3.3-1    2022-03-03 [1] CRAN (R 4.1.2) #>  systemfonts                1.0.4    2022-02-11 [1] RSPM #>  textshaping                0.3.6    2021-10-13 [1] RSPM #>  tibble                   * 3.1.6    2021-11-07 [1] RSPM #>  tidyr                    * 1.2.0    2022-02-01 [1] RSPM #>  tidyselect                 1.1.2    2022-02-21 [1] RSPM #>  tidytree                   0.3.9    2022-03-04 [1] RSPM #>  tidyverse                * 1.3.1    2021-04-15 [1] RSPM #>  treeio                     1.18.1   2021-11-14 [1] Bioconductor #>  TreeSummarizedExperiment   2.2.0    2021-10-26 [1] Bioconductor #>  tzdb                       0.2.0    2021-10-27 [1] RSPM #>  utf8                       1.2.2    2021-07-24 [1] RSPM #>  vctrs                      0.3.8    2021-04-29 [1] RSPM #>  withr                      2.5.0    2022-03-03 [1] RSPM #>  xfun                       0.30     2022-03-02 [1] RSPM #>  xml2                       1.3.3    2021-11-30 [1] RSPM #>  XVector                    0.34.0   2021-10-26 [1] Bioconductor #>  yaml                       2.3.5    2022-02-21 [1] RSPM #>  yulab.utils                0.0.4    2021-10-09 [1] RSPM #>  zlibbioc                   1.40.0   2021-10-26 [1] Bioconductor #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.1.2/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://qpmnguyen.github.io/CBEA/articles/basic_usage.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"CBEA: Competitive Balances for Taxonomic Enrichment Analysis","text":"vignette generated using BiocStyle (Oleś, 2021) knitr (Xie, 2021) rmarkdown (Allaire, Xie, McPherson, et al., 2022) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, J. McPherson, et al. rmarkdown: Dynamic Documents R. R package version 2.12. 2022. URL: https://github.com/rstudio/rmarkdown. [2] T. Benaglia, D. Chauveau, D. R. Hunter, et al. “mixtools: R Package Analyzing Finite Mixture Models”. : Journal Statistical Software 32.6 (2009), pp. 1–29. URL: http://www.jstatsoft.org/v32/i06/. [3] M. L. Delignette-Muller C. Dutang. “fitdistrplus: R Package Fitting Distributions”. : Journal Statistical Software 64.4 (2015), pp. 1–34. URL: https://www.jstatsoft.org/article/view/v064i04. [4] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [5] P. J. McMurdie S. Holmes. “phyloseq: R package reproducible interactive analysis graphics microbiome census data”. : PLoS ONE 8.4 (2013), p. e61217. URL: http://dx.plos.org/10.1371/journal.pone.0061217. [6] M. Morgan, J. Wang, V. Obenchain, et al. BiocParallel: Bioconductor facilities parallel evaluation. R package version 1.28.3. 2021. URL: https://github.com/Bioconductor/BiocParallel. [7] Q. Nguyen. CBEA: R package performing CBEA approach. https://github.com/qpmnguyen/CBEA - R package version 0.99.3. 2022. DOI: 10.18129/B9.bioc.CBEA. URL: http://www.bioconductor.org/packages/CBEA. [8] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.22.0. 2021. URL: https://github.com/Bioconductor/BiocStyle. [9] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2021. URL: https://www.R-project.org/. [10] D. Robinson, . Hayes, S. Couch. broom: Convert Statistical Objects Tidy Tibbles. https://broom.tidymodels.org/, https://github.com/tidymodels/broom. 2022. [11] H. Wickham. “testthat: Get Started Testing”. : R Journal 3 (2011), pp. 5–10. URL: https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf. [12] H. Wickham, M. Averick, J. Bryan, et al. “Welcome tidyverse”. : Journal Open Source Software 4.43 (2019), p. 1686. DOI: 10.21105/joss.01686. [13] H. Wickham, W. Chang, R. Flight, et al. sessioninfo: R Session Information. https://github.com/r-lib/sessioninfo#readme, https://r-lib.github.io/sessioninfo/. 2021. [14] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.37. 2021. URL: https://yihui.org/knitr/.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Quang Nguyen. Author, maintainer.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nguyen Q (2022). CBEA: R package performing CBEA approach. doi: 10.18129/B9.bioc.CBEA, https://github.com/qpmnguyen/CBEA - R package version 0.99.3, http://www.bioconductor.org/packages/CBEA. Nguyen Q (2022). “CBEA: Competitive balances taxonomic enrichment analysis.” bioRxiv. doi: 10.1101/TODO, https://www.biorxiv.org/content/10.1101/TODO.","code":"@Manual{,   title = {CBEA: R package for performing CBEA approach},   author = {Quang Nguyen},   year = {2022},   url = {http://www.bioconductor.org/packages/CBEA},   note = {https://github.com/qpmnguyen/CBEA - R package version 0.99.3},   doi = {10.18129/B9.bioc.CBEA}, } @Article{,   title = {CBEA: Competitive balances for taxonomic enrichment analysis},   author = {Quang Nguyen},   year = {2022},   journal = {bioRxiv},   doi = {10.1101/TODO},   url = {https://www.biorxiv.org/content/10.1101/TODO}, }"},{"path":[]},{"path":"https://qpmnguyen.github.io/CBEA/index.html","id":"quang-nguyen","dir":"","previous_headings":"","what":"Quang Nguyen","title":"Competitive Balances for Taxonomic Enrichment Analysis in R","text":"CBEA package provides basic functionality perform taxonomic enrichment analysis R. package mainly supports CBEA method, provides additional support generating sets analyses using approaches commonly used gene set testing literature.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Competitive Balances for Taxonomic Enrichment Analysis in R","text":"development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"qpmnguyen/CBEA\")"},{"path":"https://qpmnguyen.github.io/CBEA/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Competitive Balances for Taxonomic Enrichment Analysis in R","text":"package implements CBEA approach performing set-based enrichment analysis microbiome relative abundance data. preprint package can found bioXriv. summary, CBEA (Competitive Balances taxonomic Enrichment Analysis) provides estimate activity set transforming input taxa--sample data matrix corresponding set--sample data matrix. resulting output can used additional downstream analyses differential abundance, classification, clustering, etc. using set-based features instead original units. transformation CBEA applies based isometric log ratio transformation captures enrichment set balance geometric mean variables set remainder taxa. inference procedure performed estimating null distribution test statistic. can done either via permutations parametric fit distributional form permuted scores. Users can also adjust variance inflation due inter-taxa correlation. Please refer main manuscript additional details.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"cbea used compute enrichment scores per sample pre-defined sets using CBEA (Competitive Balances Enrichment Analysis).","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"","code":"cbea(   obj,   set,   output,   distr = NULL,   adj = FALSE,   n_perm = 100,   parametric = TRUE,   thresh = 0.05,   init = NULL,   control = NULL,   parallel_backend = NULL,   ... )  # S4 method for TreeSummarizedExperiment cbea(   obj,   set,   output,   distr = NULL,   abund_values,   adj = FALSE,   n_perm = 100,   parametric = TRUE,   thresh = 0.05,   init = NULL,   control = NULL,   parallel_backend = NULL,   ... )  # S4 method for data.frame cbea(   obj,   set,   taxa_are_rows = FALSE,   id_col = NULL,   output,   distr = NULL,   adj = FALSE,   n_perm = 100,   parametric = TRUE,   thresh = 0.05,   init = NULL,   control = NULL,   parallel_backend = NULL,   ... )  # S4 method for matrix cbea(   obj,   set,   taxa_are_rows = FALSE,   output,   distr = NULL,   adj = FALSE,   n_perm = 100,   parametric = TRUE,   thresh = 0.05,   init = NULL,   control = NULL,   parallel_backend = NULL,   ... )"},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"obj element class TreeSummarizedExperiment, data.frame, matrix. phyloseq supported due conflicting dependencies TreeSummarizedExperiment much compact. set BiocSet. Sets tested enrichment BiocSet format. Taxa names must format elements set. output (String). form output model. either zscore, cdf, raw, pval, sig distr (String). choice distribution null. Can either mnorm (2 component mixture normal), norm (Normal distribution), NULL parametric TRUE. adj (Logical). Whether correlation adjustment procedure utilized. Defaults FALSE. n_perm (Numeric). Add bootstrap resamples permuted unpermuted data set. might help stabilizing distribution fitting procedure, especially sample size low. Defaults 1. parametric (Logical). Indicate whether parametric distribution fitted estimate z-scores, CDF values, p-values. Defaults TRUE thresh (Numeric). Threshold significant p-values sig output. Defaults 0.05 init (Named List). Initialization parameters estimating null distribution. Default NULL. control (Named List). Additional arguments passed fitdistr normmixEM. Defaults NULL. parallel_backend See documentation cbea ... Additional arguments used moment. abund_values (Character). Character value selecting assay input cbea taxa_are_rows (Logical). Indicate whether data frame matrix taxa rows id_col (Character Vector). Vector character indicate metadata columns keep (example, sample_id)","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"R    n m matrix enrichment scores sample level","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"function support different formats OTU table, however best results please use TreeSummarizedExperiment. phyloseq supported, however CBEA explicitly import phyloseq package require users install separately. use data.frame matrix, users specify whether taxa rows using taxa_are_rows option. Additionally, data.frame, users can specify metadata columns kept via id_col argument.  output argument specifies type values returned final matrix. options pval sig returns either unadjusted p-values dummy variables indicating whether set significantly enriched sample (based unadjusted p-values thresholded thresh). option raw returns raw scores computed set without distribution fitting inference procedure. Users can use option examine distribution CBEA scores null.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/cbea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrichment analysis using competitive compositional balances (CBEA) — cbea","text":"","code":"data(hmp_gingival) seq <- hmp_gingival$data set <- hmp_gingival$set # n_perm = 10 to reduce runtime mod <- cbea(obj = seq, set = set, output = \"zscore\",     abund_values = \"16SrRNA\",     distr = \"norm\", parametric = TRUE,     adj = TRUE, thresh = 0.05, n_perm = 10) #> Warning: Taxonomic count table contains zeros, #>             which would invalidate the log-ratio transform. #>             Adding a pseudocount of 1e-5..."},{"path":"https://qpmnguyen.github.io/CBEA/reference/check_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking arguments of the function — check_args","title":"Checking arguments of the function — check_args","text":"function extracts parent environment (called cbea function) check arguments.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/check_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking arguments of the function — check_args","text":"","code":"check_args()"},{"path":"https://qpmnguyen.github.io/CBEA/reference/check_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking arguments of the function — check_args","text":"None","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/combine_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining two distributions — combine_distr","title":"Combining two distributions — combine_distr","text":"Pass along handling combining distributions avoid clogging main function","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/combine_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining two distributions — combine_distr","text":"","code":"combine_distr(perm, unperm, distr, ...)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/combine_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining two distributions — combine_distr","text":"perm (List). list parameters permuted distribution unperm (List). list parameters unpermuted distribtion distr (String). Distribution choice","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/combine_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining two distributions — combine_distr","text":"list combined distribution form based initial distribution choice","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":null,"dir":"Reference","previous_headings":"","what":"Defintions for location-scale t distribution — dlst","title":"Defintions for location-scale t distribution — dlst","text":"Internal functions defining t-distribution terms location-scale.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defintions for location-scale t distribution — dlst","text":"","code":"dlst(x, df = 1, mu = 0, sigma = 1, log = FALSE)  plst(q, df = 1, mu = 0, sigma = 1, log = FALSE)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defintions for location-scale t distribution — dlst","text":"x, q data vector df Degrees freedom mu location parameter sigma scale parameter log Indicate whether probabilities return log","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defintions for location-scale t distribution — dlst","text":"Numeric values representing density cumulative probabilitiy values location-scale t distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Defintions for location-scale t distribution — dlst","text":"dlst: Probability Density Function plst: Cumulative distribution function","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dlst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defintions for location-scale t distribution — dlst","text":"","code":"val <- rnorm(10)     dlst(val, df = 1, mu = 0, sigma = 1) #>  [1] 0.3150425 0.2478781 0.1995017 0.1585642 0.1590726 0.3072128 0.3156647 #>  [8] 0.1163953 0.2147402 0.3001339     val <- rnorm(10)     plst(q = val, df = 1, mu = 0, sigma = 1) #>  [1] 0.5825214 0.7312036 0.5054332 0.1740535 0.2805365 0.4547706 0.5777429 #>  [8] 0.2507152 0.3138030 0.1516318"},{"path":"https://qpmnguyen.github.io/CBEA/reference/dot-cbea.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal cbea function — .cbea","title":"Internal cbea function — .cbea","text":"See main function cbea documentation details.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dot-cbea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal cbea function — .cbea","text":"","code":".cbea(   ab_tab,   set_list,   output,   distr,   adj = FALSE,   n_perm = 100,   parametric = TRUE,   thresh = 0.05,   init = NULL,   control = NULL,   parallel_backend = NULL,   ... )"},{"path":"https://qpmnguyen.github.io/CBEA/reference/dot-cbea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal cbea function — .cbea","text":"ab_tab (Matrix). Named n p matrix. OTU/ASV/Strain table taxa columns. set_list (List). List length m. list set membership column names. output See documentation cbea distr See documentation cbea adj See documentation cbea n_perm See documentation cbea parametric See documentation cbea thresh See documentation cbea init See documentation cbea control See documentation cbea parallel_backend See documentation cbea ... See documentation cbea","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/dot-cbea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal cbea function — .cbea","text":"data.frame size n m. n total number samples mis total number sets elements represented data.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/estimate_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate distribution parameters from data — estimate_distr","title":"Estimate distribution parameters from data — estimate_distr","text":"function takes numeric vector input attempts find optimal solution parameters distribution choice. Right now norm mnorm distributions supported.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/estimate_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate distribution parameters from data — estimate_distr","text":"","code":"estimate_distr(data, distr, init = NULL, args_list = NULL)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/estimate_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate distribution parameters from data — estimate_distr","text":"data (Numeric Vector). vector numbers can inputted estimate parameters distributional forms. distr (String). distribution fitted. Right now norm mnorm supported init (List). Initialization parameters distribution. mixtures, named element list vector length equal number components args_list (List). Named list additional arguments passed onto fitdist normalmixEM ... paremteres passed fitdistrplus normalmixEM","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/estimate_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate distribution parameters from data — estimate_distr","text":"named list parameter names values","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/estimate_distr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate distribution parameters from data — estimate_distr","text":"package fitdistrplus used estimate parameters normal distribution package normalmixEM used estimate parameters mixture normal distribution. far suggest estimating two components mixture normal distribution. default options, use mostly defaults packages . difference mixture normal distribution convergence parameters loosened requiring iterations converge.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/fit_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute CBEA scores for each set — fit_scores","title":"Function to compute CBEA scores for each set — fit_scores","text":"Function compute CBEA scores set","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/fit_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute CBEA scores for each set — fit_scores","text":"","code":"fit_scores(   index_vec,   ab_tab,   adj,   distr,   output,   n_perm,   parametric,   thresh,   init,   control )"},{"path":"https://qpmnguyen.github.io/CBEA/reference/fit_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute CBEA scores for each set — fit_scores","text":"index_vec (Character Vector). character vector indicating elements set interest ab_tab (Matrix). Named n p matrix. OTU/ASV/Strain table taxa columns. adj (Logical). See documentation cbea distr (Character). See documentation cbea output (Character). See documentation cbea n_perm (Numeric). total number permutations. parametric (Logical). See documentation cbea thresh (Numeric). See documentation cbea init (List). See documentation cbea control (List). See documentation cbea","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/fit_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute CBEA scores for each set — fit_scores","text":"function returns list containing output scores diagnostics (sublists)","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_adj_mnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to perform the adjustment for the mixture normal distribution — get_adj_mnorm","title":"Function to perform the adjustment for the mixture normal distribution — get_adj_mnorm","text":"Function perform adjustment mixture normal distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_adj_mnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to perform the adjustment for the mixture normal distribution — get_adj_mnorm","text":"","code":"get_adj_mnorm(perm, unperm, verbose = FALSE, fix_comp = \"none\")"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_adj_mnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to perform the adjustment for the mixture normal distribution — get_adj_mnorm","text":"perm (List). Parameter values distribution scores unperm (List). Parameter values distribution scores computed unpermuted data fix_comp (Character). component keep","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_adj_mnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to perform the adjustment for the mixture normal distribution — get_adj_mnorm","text":"List parameters adjusted mixture normal.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get diagnostic values using parent environment. — get_diagnostics","title":"Get diagnostic values using parent environment. — get_diagnostics","text":"function used internally inside fit_scores grab relevant objects previous parent environment (.e. environment fit_scores) compute relevant information. role function break diagnostic component different function maintenance.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get diagnostic values using parent environment. — get_diagnostics","text":"","code":"get_diagnostics(env = caller_env())"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get diagnostic values using parent environment. — get_diagnostics","text":"function returns list two components: diagnostic represent goodness--fit statistics distribution fitting lmoment contains l-moment comparisons computed raw scores, permuted scores, fitted distributions.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the overall mean of a two component mixture distribution — get_mean","title":"Get the overall mean of a two component mixture distribution — get_mean","text":"Get overall mean two component mixture distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the overall mean of a two component mixture distribution — get_mean","text":"","code":"get_mean(mu, lambda)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the overall mean of a two component mixture distribution — get_mean","text":"mu (Vector). two value vector mean values. lambda (Vector). two value vector component mixing coefficients","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the overall mean of a two component mixture distribution — get_mean","text":"numeric value representing overall mean","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_raw_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","title":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","text":"Get CBEA scores given matrix vector column indices","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_raw_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","text":"","code":"get_raw_score(X, idx)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_raw_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","text":"X (Matrix). OTU table matrix format taxa columns samples rows idx (Integer vector). Vector integers indicating column ids taxa set","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_raw_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","text":"matrix size n 1 nis total number samples","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_raw_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CBEA scores for a given matrix and a vector of column indices — get_raw_score","text":"","code":"data(hmp_gingival) seq <- hmp_gingival$data seq_matrix <- SummarizedExperiment::assays(seq)[[1]] seq_matrix <- t(seq_matrix) + 1 rand_set <- sample(seq_len(ncol(seq_matrix)), size = 10) scores <- get_raw_score(X = seq_matrix, idx = rand_set)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the overall standard deviation of a\ntwo component mixture distribution — get_sd","title":"Get the overall standard deviation of a\ntwo component mixture distribution — get_sd","text":"Get overall standard deviation two component mixture distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the overall standard deviation of a\ntwo component mixture distribution — get_sd","text":"","code":"get_sd(sigma, mu, mean, lambda)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the overall standard deviation of a\ntwo component mixture distribution — get_sd","text":"sigma (Vector). two value vector component-wise variances mu (Vector). two value vector mean values. mean (Numeric Value). overall mean. lambda (Vector). two value vector component mixing coefficients","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/get_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the overall standard deviation of a\ntwo component mixture distribution — get_sd","text":"numeric value representing overall standard deviation","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/glance.CBEAout.html","id":null,"dir":"Reference","previous_headings":"","what":"Glance at CBEAout object — glance.CBEAout","title":"Glance at CBEAout object — glance.CBEAout","text":"function cleans diagnostics cbea method (CBEAout object) nice tibble::tibble()","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/glance.CBEAout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glance at CBEAout object — glance.CBEAout","text":"","code":"# S3 method for CBEAout glance(x, statistic, ...)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/glance.CBEAout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glance at CBEAout object — glance.CBEAout","text":"x object type CBEAout statistic type diagnostic return. Users can choose return fit_diagnostic returns goodness fit statistics different fitted distributions (e.g. log likelihoods) fit_comparison returns comparisons across different distributions raw values (data) across 4 l-moments. ... Unused, kept consistency generics","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/glance.CBEAout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glance at CBEAout object — glance.CBEAout","text":"tibble::tibble() summarizing diagnostic fits per set (row)","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/glance.CBEAout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glance at CBEAout object — glance.CBEAout","text":"","code":"# load the data data(hmp_gingival) mod <- cbea(hmp_gingival$data, hmp_gingival$set, abund_values = \"16SrRNA\",     output = \"sig\", distr = \"norm\", adj = FALSE, n_perm = 5, parametric = TRUE) #> Warning: Taxonomic count table contains zeros, #>             which would invalidate the log-ratio transform. #>             Adding a pseudocount of 1e-5... glance(mod, \"fit_diagnostic\") #> # A tibble: 3 × 5 #>   set_ids     final_param  loglik    ad type           #>   <chr>       <named list>  <dbl> <dbl> <chr>          #> 1 Aerobic     <dbl [2]>    -5302. 0.353 permuted_distr #> 2 Anaerobic   <dbl [2]>    -5584. 1.98  permuted_distr #> 3 F_Anaerobic <dbl [2]>    -5295. 0.190 permuted_distr"},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric mean of a vector — gmean","title":"Geometric mean of a vector — gmean","text":"Compute geometric mean vector using exp(mean(log(.x))) format","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric mean of a vector — gmean","text":"","code":"gmean(vec)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric mean of a vector — gmean","text":"vec vector values length n","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric mean of a vector — gmean","text":"numeric value geometric mean vector vec","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric mean of a vector — gmean","text":"","code":"ex <- abs(rnorm(10)) gmean(ex) #> [1] 0.7043728"},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmeanRow.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric mean of rows of a matrix — gmeanRow","title":"Geometric mean of rows of a matrix — gmeanRow","text":"function computes geometric mean row numeric matrix","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmeanRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric mean of rows of a matrix — gmeanRow","text":"","code":"gmeanRow(X)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmeanRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric mean of rows of a matrix — gmeanRow","text":"X numeric matrix n rows p columns","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmeanRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric mean of rows of a matrix — gmeanRow","text":"numeric vector geometric mean matrix X length n","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/gmeanRow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric mean of rows of a matrix — gmeanRow","text":"","code":"ex <- matrix(rnorm(100), nrow = 10, ncol = 10) ex <- abs(ex) gmeanRow(ex) #>  [1] 0.8165790 0.5761055 0.3790405 0.7484533 0.3321202 0.6691597 0.8373901 #>  [8] 0.2445767 0.5084704 0.2223044"},{"path":"https://qpmnguyen.github.io/CBEA/reference/hmp_gingival.html","id":null,"dir":"Reference","previous_headings":"","what":"Gingival data set from the Human Microbiome Project — hmp_gingival","title":"Gingival data set from the Human Microbiome Project — hmp_gingival","text":"Gingival data set Human Microbiome Project","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/hmp_gingival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gingival data set from the Human Microbiome Project — hmp_gingival","text":"","code":"data(hmp_gingival)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/hmp_gingival.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gingival data set from the Human Microbiome Project — hmp_gingival","text":"list two elements data microbiome relative abundance data relevant metadata obtained Human Microbiome Project via HMP16SData package (snapshot: 11-15-2021). data set hosted container type phyloseq. Using mia package users can convert TreeSummarizedExperiment type. set Sets microbes based metabolism annotation Genera level. Annotations obtained via Calagaro et al.'s repository Zenodo (https://doi.org/10.5281/zenodo.3942108)","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/hmp_gingival.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gingival data set from the Human Microbiome Project — hmp_gingival","text":"Data can downloaded directly https://hmpdacc.org/hmp/ R interface data https://doi.org/doi:10.18129/B9.bioc.HMP16SData Beghini F, Renson , Zolnik CP, Geistlinger L, Usyk M, Moody TU, et al. Tobacco Exposure Associated Oral Microbiota Oxygen Utilization New York City Health Nutrition Examination Study. Annals Epidemiology. 2019;34:18–25.e3. doi:10.1016/j.annepidem.2019.03.005 Consortium THMP, Huttenhower C, Gevers D, Knight R, Abubucker S, Badger JH, et al. Structure, Function Diversity Healthy Human Microbiome. Nature. 2012;486(7402):207–214. doi:10.1038/nature11234. Calgaro M, Romualdi C, Waldron L, Risso D, Vitulo N. Assessment Statistical Methods Single Cell, Bulk RNA-Seq, Metagenomics Applied Microbiome Data. Genome Biology. 2020;21(1):191. doi:10.1186/s13059-020-02104-1 Schiffer L, Azhar R, Shepherd L, Ramos M, Geistlinger L, Huttenhower C, et al. HMP16SData: Efficient Access Human Microbiome Project Bioconductor. American Journal Epidemiology. 2019;doi:10.1093/aje/kwz006.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/merge_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"This function handles the ability to merge supplied and defaults — merge_lists","title":"This function handles the ability to merge supplied and defaults — merge_lists","text":"function handles ability merge supplied defaults","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/merge_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function handles the ability to merge supplied and defaults — merge_lists","text":"","code":"merge_lists(defaults, supplied)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/merge_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function handles the ability to merge supplied and defaults — merge_lists","text":"defaults (List). Default options supplied (List). Supplied options","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/merge_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function handles the ability to merge supplied and defaults — merge_lists","text":"merged list","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/new_CBEAout.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating an output object of type CBEAout — new_CBEAout","title":"Creating an output object of type CBEAout — new_CBEAout","text":"function takes list lists object turns CBEAout type object","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/new_CBEAout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating an output object of type CBEAout — new_CBEAout","text":"","code":"new_CBEAout(out, call)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/new_CBEAout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating an output object of type CBEAout — new_CBEAout","text":"list containing scores set call list containing important arguments printing","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/new_CBEAout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating an output object of type CBEAout — new_CBEAout","text":"new CBEAout object (cleaner list lists)","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"The Two Component Mixture Normal Distribution — pmnorm","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"Two Component Mixture Normal Distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"","code":"pmnorm(q, mu, sigma, lambda, log = FALSE, verbose = FALSE)  dmnorm(x, mu, sigma, lambda, log = FALSE, verbose = FALSE)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"q, x (Vector). Values calculate distributional values . mu (Vector). two value vector mean values. sigma (Vector). two value vector component-wise variances lambda (Vector). two value vector component mixing coefficients log (Boolean). Whether returning probabilities log format verbose (Boolean). Whether return component values.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"numeric value representing probability density value two-component mixture distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"pmnorm: Cumulative Distribution Function dmnorm: Probability Density Function","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/pmnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Two Component Mixture Normal Distribution — pmnorm","text":"","code":"library(mixtools) #> mixtools package, version 1.2.0, Released 2020-02-05 #> This package is based upon work supported by the National Science Foundation under Grant No. SES-0518772.     lambda <- c(0.7,0.3)     mu <- c(1,2)     sigma <- c(1,1)     v <- rnormmix(100, lambda=lambda, mu=mu, sigma=sigma)     pmnorm(v, lambda=lambda,mu=mu,sigma=sigma) #>   [1] 0.772633700 0.203431536 0.500517717 0.357977205 0.452494974 0.369496574 #>   [7] 0.726615067 0.834978500 0.606652802 0.349852072 0.819880347 0.978272700 #>  [13] 0.835018828 0.502745835 0.924223165 0.361403540 0.050821453 0.614899331 #>  [19] 0.613353898 0.480917952 0.500077384 0.922163456 0.611167257 0.358453141 #>  [25] 0.227685406 0.118587472 0.029402379 0.697187332 0.260898535 0.567737031 #>  [31] 0.188993167 0.282017566 0.103990229 0.303576175 0.401919200 0.544311884 #>  [37] 0.847897779 0.426291023 0.852417514 0.838289525 0.352996309 0.219983755 #>  [43] 0.752835393 0.413662794 0.055768785 0.989435511 0.157496656 0.491749265 #>  [49] 0.355987683 0.531203812 0.829582201 0.106422950 0.869838007 0.157799185 #>  [55] 0.117364241 0.532471487 0.573395981 0.450741970 0.171064863 0.367171011 #>  [61] 0.741749105 0.628157897 0.227508059 0.135095967 0.374264733 0.854395753 #>  [67] 0.037043601 0.100964468 0.887085115 0.473827199 0.706151707 0.078029555 #>  [73] 0.249056534 0.186168696 0.888225001 0.083696015 0.095301953 0.400292786 #>  [79] 0.491133330 0.656991114 0.812453972 0.395840845 0.177674413 0.269541294 #>  [85] 0.410485455 0.474147520 0.635783369 0.450488366 0.321201201 0.863587171 #>  [91] 0.888629102 0.488258531 0.379850972 0.881581826 0.954653797 0.439981723 #>  [97] 0.952482378 0.979950648 0.717997421 0.006667643     dmnorm(v, lambda=lambda,mu=mu,sigma=sigma) #>   [1] 0.26779918 0.26287804 0.36080940 0.34178695 0.35964852 0.34510656 #>   [7] 0.29608732 0.21978405 0.34503418 0.33924792 0.23252550 0.04643530 #>  [13] 0.21974899 0.36073716 0.12633448 0.34280850 0.09930783 0.34274839 #>  [19] 0.34318854 0.36096460 0.36082236 0.12892196 0.34380201 0.34193058 #>  [25] 0.27989145 0.18634075 0.06395805 0.31129738 0.30019161 0.35374715 #>  [31] 0.25181060 0.31141039 0.16997735 0.32157887 0.35272045 0.35735402 #>  [37] 0.20826500 0.35680040 0.20409480 0.21688739 0.34024998 0.27469665 #>  [43] 0.28066566 0.35486018 0.10678090 0.02517920 0.22503377 0.36098557 #>  [49] 0.34118043 0.35883752 0.22442505 0.17278187 0.18730346 0.22530917 #>  [55] 0.18501131 0.35871081 0.35269172 0.35950720 0.23702967 0.34446267 #>  [61] 0.28740659 0.33874813 0.27977396 0.20358134 0.34638541 0.20224599 #>  [67] 0.07719754 0.16644413 0.16947597 0.36080765 0.30689328 0.13791314 #>  [73] 0.29333571 0.24955987 0.16825255 0.14526639 0.15969408 0.35239844 #>  [79] 0.36099146 0.32864950 0.23852030 0.35148492 0.24261693 0.30493665 #>  [85] 0.35431329 0.36081719 0.33626473 0.35948618 0.32896331 0.19346312 #>  [91] 0.16781744 0.36100765 0.34781335 0.17530183 0.08472048 0.35848559 #>  [97] 0.08793114 0.04341500 0.30076687 0.01803274"},{"path":"https://qpmnguyen.github.io/CBEA/reference/print.CBEAout.html","id":null,"dir":"Reference","previous_headings":"","what":"Print dispatch for CBEAout objects — print.CBEAout","title":"Print dispatch for CBEAout objects — print.CBEAout","text":"Print dispatch CBEAout objects","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/print.CBEAout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print dispatch for CBEAout objects — print.CBEAout","text":"","code":"# S3 method for CBEAout print(x, ...)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/print.CBEAout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print dispatch for CBEAout objects — print.CBEAout","text":"x CBEAout object ... Undefined arguments, keeping consistency generics","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/print.CBEAout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print dispatch for CBEAout objects — print.CBEAout","text":"Text printing","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics glance, tidy","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/scale_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaling scores based on estimated null distribution — scale_scores","title":"Scaling scores based on estimated null distribution — scale_scores","text":"Scaling scores based estimated null distribution","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/scale_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaling scores based on estimated null distribution — scale_scores","text":"","code":"scale_scores(scores, method, param, distr, thresh = 0.05)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/scale_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaling scores based on estimated null distribution — scale_scores","text":"scores (Numeric Vector). Raw CBEA scores generated without permutations method (String). final form user want return. Options include cdf, zscore, pval sig. param (List). parameters estimated null distribution. Names must match distribution. thresh (Numeric). threshold decide whether set significantly enriched. available method sig","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/scale_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaling scores based on estimated null distribution — scale_scores","text":"vector size n n sample size","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/tidy.CBEAout.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a CBEAout object — tidy.CBEAout","title":"Tidy a CBEAout object — tidy.CBEAout","text":"function takes CBEA type object collects values across sets samples evaluated.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/tidy.CBEAout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a CBEAout object — tidy.CBEAout","text":"","code":"# S3 method for CBEAout tidy(x, ...)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/tidy.CBEAout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a CBEAout object — tidy.CBEAout","text":"x CBEAout object. ... Unused, included generic consistency .","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/tidy.CBEAout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a CBEAout object — tidy.CBEAout","text":"tidy tibble::tibble() summarizing scores per sample per set.","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/tidy.CBEAout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a CBEAout object — tidy.CBEAout","text":"","code":"# load the data data(hmp_gingival) mod <- cbea(hmp_gingival$data, hmp_gingival$set, abund_values = \"16SrRNA\",     output = \"sig\", distr = \"norm\", adj = FALSE, n_perm = 5, parametric = TRUE) #> Warning: Taxonomic count table contains zeros, #>             which would invalidate the log-ratio transform. #>             Adding a pseudocount of 1e-5... tidy(mod) #> # A tibble: 369 × 4 #>    sample_ids Aerobic Anaerobic F_Anaerobic #>    <chr>        <dbl>     <dbl>       <dbl> #>  1 700014427        1         0           1 #>  2 700014521        0         0           1 #>  3 700014603        1         0           0 #>  4 700014749        1         0           1 #>  5 700014791        0         0           1 #>  6 700014917        1         0           1 #>  7 700014989        0         1           0 #>  8 700015076        1         0           1 #>  9 700015149        0         0           1 #> 10 700015215        0         1           0 #> # … with 359 more rows"},{"path":"https://qpmnguyen.github.io/CBEA/reference/var_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting up parameter arrays for vectorized call to d/pnorm functions\nfor multi-component mixture distributions — var_setup","title":"Setting up parameter arrays for vectorized call to d/pnorm functions\nfor multi-component mixture distributions — var_setup","text":"Setting parameter arrays vectorized call d/pnorm functions multi-component mixture distributions","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/var_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting up parameter arrays for vectorized call to d/pnorm functions\nfor multi-component mixture distributions — var_setup","text":"","code":"var_setup(mu, sigma, lambda, vlen)"},{"path":"https://qpmnguyen.github.io/CBEA/reference/var_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting up parameter arrays for vectorized call to d/pnorm functions\nfor multi-component mixture distributions — var_setup","text":"mu See pmnorm documentation sigma See pmnorm documentation lambda See pmnorm documentation vlen (Integer). Length x p vector evaluated","code":""},{"path":"https://qpmnguyen.github.io/CBEA/reference/var_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting up parameter arrays for vectorized call to d/pnorm functions\nfor multi-component mixture distributions — var_setup","text":"list containing lambda, mu, sigma","code":""},{"path":"https://qpmnguyen.github.io/CBEA/news/index.html","id":"cbea-0993","dir":"Changelog","previous_headings":"","what":"CBEA 0.99.3","title":"CBEA 0.99.3","text":"NEW FEATURES Created output type object (CBEAout). S3 type object essentially list incorporates final score matrix well diagnostic details. SIGNIFICANT USER-VISIBLE CHANGES Due new feature , now instead getting tibble, users extract scores either using provided function use custom approach based list--list format CBEAout objects. Implemented tidy glance methods deal CBEAout objects BUG FIXES None","code":""},{"path":"https://qpmnguyen.github.io/CBEA/news/index.html","id":"cbea-0992","dir":"Changelog","previous_headings":"","what":"CBEA 0.99.2","title":"CBEA 0.99.2","text":"NEW FEATURES Added option (parametric) specify whether null estimated parametrically via pure permutation. support , option (n_perm) also added specify number permutations. warning added parametric FALSE n_boot small (< 100) Added option (parallel_backend) specify parallel backend loop using BiocParallel Argument control now allow special slot titled fix_comp can specify component two-component mixture distribution fix adjustment process. SIGNIFICANT USER-VISIBLE CHANGES Combined raw argument output argument CBEA function specify returning raw CBEA scores (without distribution fitting transformation). New revamped vignettes Significant reduction dependencies, including removing native support phyloseq BUG FIXES None","code":""},{"path":"https://qpmnguyen.github.io/CBEA/news/index.html","id":"cbea-0991","dir":"Changelog","previous_headings":"","what":"CBEA 0.99.1","title":"CBEA 0.99.1","text":"NEW FEATURES None SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES Removed .Rproj file conform Bioconductor error","code":""},{"path":"https://qpmnguyen.github.io/CBEA/news/index.html","id":"cbea-0990","dir":"Changelog","previous_headings":"","what":"CBEA 0.99.0","title":"CBEA 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. Added complete functionality perform CBEA scratch bundled data set SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""}]
